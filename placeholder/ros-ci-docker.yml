name: Test workflows

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  check-name:
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ github.event_name }}
      - run: echo ${{ github.ref }}
      - run: echo ${{ github.ref }} == *'heads'*
      - run: echo ${{ github.ref }} == *'tags'*

  build-and-test:
    if: contains(github.ref, 'heads') || contains(github.ref, 'pull')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false
    steps:

    - uses: actions/checkout@v2

    - name: Setup ROS
      uses: ros-tooling/setup-ros@0.0.18
      with:
        required-ros-distributions: melodic

    - name: Source ROS and Move code
      run: |
        mkdir src_tmp
        mv `find -maxdepth 1 -not -name . -not -name src_tmp -not -name dockerfiles` src_tmp
        mv src_tmp/ src/

    - name: Build and Run Tests
      run: |
        source /opt/ros/melodic/setup.bash
        rosdep update
        rosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO
        colcon build --cmake-args -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -fprofile-arcs -ftest-coverage" -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS} -fprofile-arcs -ftest-coverage" -DCMAKE_BUILD_TYPE=Debug
        colcon build --cmake-target tests --cmake-args -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -fprofile-arcs -ftest-coverage" -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS} -fprofile-arcs -ftest-coverage" -DCMAKE_BUILD_TYPE=Debug
        lcov --initial --directory build --capture --output-file lcov.base
        colcon test
        colcon test-result --verbose
        lcov --directory build --capture --output-file lcov.test
        lcov -a lcov.base -a lcov.test -o lcov.total
        lcov -r lcov.total '*/tests/*' '*/test/*' '*/build/*' '*/devel/*' '*/install/*' '*/log/*' '/usr/*' '/opt/*' '/tmp/*' '*/CMakeCCompilerId.c' '*/CMakeCXXCompilerId.cpp' -o lcov.total.filtered
        genhtml -p "$PWD" --legend --demangle-cpp lcov.total.filtered -o coverage_folder

      #tar -czvf coverage.tar.gz coverage_folder


      #uses: ros-tooling/action-ros-ci@0.0.16
      #with:
    #    package-name: demo_nodes_cpp2

    - name: Upload Logs
      uses: actions/upload-artifact@v1
      with:
        name: coverage-tar-file
        path: ./coverage_folder
      if: always()


  docker-build:

    if: contains(github.ref, 'tags')

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - name: Push to dockerhub
        uses: docker/build-push-action@v1
        with:
          repository: sgerman/test_image
          username: ${{ secrets.DKR_USR }}
          password: ${{ secrets.DKR_PASS }}
          tags: ub_linaro
          tag_with_ref: true
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          dockerfile: ./dockerfiles/Dockerfile.Ub_linaro
