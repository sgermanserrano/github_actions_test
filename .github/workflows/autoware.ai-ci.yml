name: Autoware AI build

on:
  pull_request:
  push:
    branches:
      - test_branch

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, self-hosted]
      fail-fast: false
    steps:
    - name: Setup ROS
      uses: ros-tooling/setup-ros@0.0.18
      with:
        required-ros-distributions: melodic

    - name: Build and test AutowareAI
      run: |
        source /opt/ros/melodic/setup.bash
        mkdir -p autoware.ai/src
        cd autoware.ai
        wget -O autoware.ai.repos "https://gitlab.com/autowarefoundation/autoware.ai/autoware/raw/master/autoware.ai.repos?inline=false"
        vcs import src < autoware.ai.repos
        rosdep update
        rosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO
        colcon build --cmake-args -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -fprofile-arcs -ftest-coverage" -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS} -fprofile-arcs -ftest-coverage" -DCMAKE_BUILD_TYPE=Debug
        colcon build --cmake-target tests --cmake-args -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} -fprofile-arcs -ftest-coverage" -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS} -fprofile-arcs -ftest-coverage" -DCMAKE_BUILD_TYPE=Debug
        lcov --initial --directory build --capture --output-file lcov.base
        colcon test
        colcon test-result --verbose
        lcov --directory build --capture --output-file lcov.test
        lcov -a lcov.base -a lcov.test -o lcov.total
        lcov -r lcov.total '*/tests/*' '*/test/*' '*/build/*' '*/devel/*' '*/install/*' '*/log/*' '/usr/*' '/opt/*' '/tmp/*' '*/CMakeCCompilerId.c' '*/CMakeCXXCompilerId.cpp' -o lcov.total.filtered
        genhtml -p "$PWD" --legend --demangle-cpp lcov.total.filtered -o coverage_master
        tar -czvf coverage.tar.gz coverage_master

    - name: Upload Logs
      uses: actions/upload-artifact@v1
      with:
        name: coverage.tar.gz
        path: autoware.ai/coverage.tar.gz
      if: always()
