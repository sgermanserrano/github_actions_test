name: Arm64 Docker build

on:
  push:
    branches: master

jobs:

  build-docker-image-amd64-base:

    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - name: Build and push amd64 base
      run: |
        cp dependencies generic/
        cd generic
        docker login -u ${{ secrets.DKR_USR }} -p ${{ secrets.DKR_PASS }}
        docker build -f Dockerfile_arch.base -t ${{ secrets.DKR_USR }}/test_multi:base_amd64 --build-arg ARCH=amd64 --build-arg ROS_DISTRO=melodic .
        docker push ${{ secrets.DKR_USR }}/test_multi:base_amd64

  build-docker-image-arm64-base:

    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - name: Build and push arm64 base
      run: |
        cp dependencies generic/
        cd generic
        docker run --rm --privileged docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64
        docker login -u ${{ secrets.DKR_USR }} -p ${{ secrets.DKR_PASS }}
        docker build -f Dockerfile_arch.base -t ${{ secrets.DKR_USR }}/test_multi:base_arm64v8 --build-arg ARCH=arm64v8 --build-arg ROS_DISTRO=melodic .
        docker push ${{ secrets.DKR_USR }}/test_multi:base_arm64v8

  push-docker-image-base-manifest:

    needs: [build-docker-image-amd64-base, build-docker-image-arm64-base]

    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - name: Base manifest
      run: |
        docker login -u ${{ secrets.DKR_USR }} -p ${{ secrets.DKR_PASS }}
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest create ${{ secrets.DKR_USR }}/test_multi:base_latest --amend ${{ secrets.DKR_USR }}/test_multi:base_amd64 --amend ${{ secrets.DKR_USR }}/test_multi:base_arm64v8
        docker manifest push ${{ secrets.DKR_USR }}/test_multi:base_latest

  build-docker-image-amd64:

    needs: push-docker-image-base-manifest

    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - name: Build and push amd64
      run: |
        cd generic
        docker login -u ${{ secrets.DKR_USR }} -p ${{ secrets.DKR_PASS }}
        docker build -f Dockerfile_arch -t ${{ secrets.DKR_USR }}/test_multi:amd64 --build-arg FROM_ARG=${{ secrets.DKR_USR }}/test_multi:base_amd64 --build-arg ROS_DISTRO=melodic --build-arg VERSION=master .
        docker push ${{ secrets.DKR_USR }}/test_multi:amd64

  build-docker-image-arm64:

    needs: push-docker-image-base-manifest

    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - name: Build and push arm64
      run: |
        cd generic
        docker run --rm --privileged docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64
        docker login -u ${{ secrets.DKR_USR }} -p ${{ secrets.DKR_PASS }}
        docker build -f Dockerfile_arch -t ${{ secrets.DKR_USR }}/test_multi:arm64v8 --build-arg FROM_ARG=${{ secrets.DKR_USR }}/test_multi:base_arm64v8 --build-arg ROS_DISTRO=melodic --build-arg VERSION=master .
        docker push ${{ secrets.DKR_USR }}/test_multi:arm64v8

  push-docker-image-manifest:

    needs: [build-docker-image-amd64, build-docker-image-arm64]

    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - name: Manifest
      run: |
        docker login -u ${{ secrets.DKR_USR }} -p ${{ secrets.DKR_PASS }}
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker manifest create ${{ secrets.DKR_USR }}/test_multi:latest --amend ${{ secrets.DKR_USR }}/test_multi:amd64 --amend ${{ secrets.DKR_USR }}/test_multi:arm64v8
        docker manifest push ${{ secrets.DKR_USR }}/test_multi:latest
